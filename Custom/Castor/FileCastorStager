#!/usr/bin/env perl

##H Manage castor stage-in pool based on file download requests.
##H
##H This agent checks for files wanted for transfer from this node and
##H issues stage-in requests for them.  It updates the current stage-in
##H status of the files in TMDB based on stager disk state.
##H
##H As TMDB only contains LFNs and no PFNs, we execute a site-local
##H script to map the LFNs to PFNs, typically using local catalogue.
##H Correspondingly, files reported by stager to be on disk are mapped
##H back to LFNs.
##H
##H Usage:
##H   FileCastorFilesize
##H      -state DIRECTORY -db FILE[:SECTION] [-log OUT]
##H	 -nodes PATTERN[,PATTERN...] -storagemap PATH
##H      [-ignore NODE[,NODE...]] [-accept NODE[,NODE...]]
##H	 [-protect PROGRAM[,ARGS...]]
##H
##H -state       agent state directory
##H -nodes       the nodes where this agent runs
##H -ignore      comma-separated list of nodes to ignore transfers from
##H -accept      comma-separated list of nodes to accept transfers from
##H -db          database connection configuration parameter file
##H -log         where to redirect logging information
##H -storagemap  storage mapping catalogue
##H -protect     an external program to call to check for storage overload

######################################################################
my %args;
use Getopt::Long;
use PHEDEX::Core::Help;
use PHEDEX::Custom::Castor::Stager::Agent;

&GetOptions ("state=s"     => \$args{DROPDIR},
	     "log=s"       => \$args{LOGFILE},
             "db=s"        => \$args{DBCONFIG},
	     "storagemap=s"=> \$args{STORAGEMAP},
	     "nodes=s"     => sub { push(@{$args{NODES}},
			     		 split(/,/, $_[1])) },
             "ignore=s"    => sub { push(@{$args{IGNORE_NODES}},
                                         split(/,/, $_[1])) },
             "accept=s"    => sub { push(@{$args{ACCEPT_NODES}},
                                         split(/,/, $_[1])) },
	     "protect=s"   => sub { push(@{$args{PROTECT_CMD}},
			     		 split(/,/, $_[1])) },
	     "help|h"      => sub { &usage() });

if (@ARGV || !$args{DROPDIR} || !$args{DBCONFIG}
    || !$args{NODES} || !$args{STORAGEMAP})
{
    die "Insufficient parameters, use -h for help.\n";
}

my $agent = PHEDEX::Custom::Castor::Stager::Agent->new (%args,@ARGV);
POE::Kernel->run();
print "POE kernel has ended, now I shoot myself\n";
exit 0;
