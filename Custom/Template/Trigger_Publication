#!/bin/sh

#-------------------------------#
#        User settings          #
#-------------------------------#

# choose publication method
# dummy:   print what we've got and exit
# vt:      use ValidationTools
# glide:   use CMS Glide
METHOD='<method>';

# choose where to run
# local: run on the local machine
# PBS:   submit the publication task to PBS
RUN='<how to run>';

# where to find the basedir of the publication tool
BASEDIR='<basedir>';

# publication log dir (where to store the log files)
LOGDIR='<path to log dir>';

# the basedir of your PubDB installation
PUBDBHOME='<PubDB home dir>';

# your PubDB ID (you need to get one, if you don't have one)
PUBDBID='<PubDB ID>';

# independently of the settings done here, you have to setup the
# corresponding publication tool by editing their config file(s). This
# cannot be done here, since the publication procedure is completely
# independent from Phedex.

#-------------------------------#
#     End of user settings      #
#-------------------------------#


#----------------------------------
#           functions
#----------------------------------


function validation_PBS_script()
{
    cat > /tmp/validation.qsub <<EOF
#PBS -v BASEDIR=${BASEDIR},DATASET=${DATASET},OWNER=${OWNER},LOGDIR=${LOGDIR}
#PBS -o $LOGDIR/pbs.$OWNER.$DATASET.out
#PBS -e $LOGDIR/pbs.$OWNER.$DATASET.err
#PBS -q short

cd $BASEDIR
perl drive_publish_new.pl --dataset $DATASET --owner $OWNER >& $LOGDIR/publish.$OWNER.$DATASET.log
exit $?

EOF
}

function glide_PBS_script()
{
    cat > /tmp/glide.qsub <<EOF
#PBS -v BASEDIR=${BASEDIR},DATASET=${DATASET},OWNER=${OWNER},LOGDIR=${LOGDIR},PUBDBHOME=${PUBDBHOME},PUBDBID=${PUBDBID}
#PBS -o $LOGDIR/pbs.$OWNER.$DATASET.out
#PBS -e $LOGDIR/pbs.$OWNER.$DATASET.err
#PBS -q short

cd $BASEDIR
source setup.sh
python2 PublishFromPhedex.py --Dataset=$DATASET --Owner=$OWNER >& ${LOGDIR}/publish.$OWNER.$DATASET.log
publishexit=$?

if [ $publishexit == 0 ]
    then
    ${PubDBHome}/user/announce-data.sh --pubdbid $PubDBID --dataset $DATASET --owner $OWNER
fi
exit $publishexit

EOF
}


#----------------------------------
#           main program
#----------------------------------

# read in the arguments the first two arguments are dataset and owner,
# the rest are AssIds for publication using CMS Glide.

DATASET=$1; shift 1;
OWNER=$1; shift 1;

if [ ! ${DATASET} ] || [ ! ${OWNER} ]
    then
    echo "you have to provide as arguments (via calling agent):"
    echo "dataset"
    echo "owner"
    echo "user settings in the beginning of this script:"
    echo "publication method"
    echo "publication basedir"
    echo "publication logdir"
    echo "PubDB home dir"
    echo "PubDB ID"
    exit 15
fi

#create log dir, if it doesn't yet exist
if [ ! -d ${LOGDIR} ]
    then
    mkdir -p ${LOGDIR}
fi

case $METHOD in
    dummy)
	echo "DATASET: $DATASET"
	echo "OWNER: $OWNER"
	echo "REST: $@"
	exit 0;;
    vt)
        ## trigger publication
        ## 1. ValidationTools

        # what are we dealing with ?
	# in the latest version, this info is not needed any more
	case $OWNER in
	    *Hit*)     Config='HIT'
	        exit 0;;
	    *MBforPU*) Config='PILEUP'
		exit 0;;
	    *DST*)     CONFIG='DST';;
	    *)         CONFIG='DIGI';;
	esac
	case $DATASET in
	    *MBforPU*) Config='PILEUP'
		exit 0;;
	esac

	case $RUN in
	    PBS)
	        # run on PBS worker nodes
		validation_PBS_script
		echo "qsub /tmp/validation.qsub"
		exitcode=$?
		if $exitcode; then
		    echo "PBS submission of validation job failed"
		    echo "please check logs in $LOGDIR"
		fi;;
	    local)
	        # run locally
		echo "cd ${BASEDIR}"
		echo "nice perl ./drive_publish_new.pl --dataset $DATASET --owner $OWNER >& $LOGDIR/publish.$OWNER.$DATASET.log"
		exitcode=$?
		if $exitcode; then
		    echo "running validation locally failed"
		    echo "please check logs in $LOGDIR"
		fi;;
	    *)
		echo "unsupported submission method chosen !!"
		echo "please use either PBS or local"
		exit 5;;
	esac
	exit $exitcode;;

    glide)
        ## 2. Via CMS Glide
	case $RUN in
	    PBS)
		glide_PBS_script
		echo "qsub /tmp/glide.qsub"
		exitcode=$?
		if $exitcode; then
		    echo "PBS submission of Glide job failed"
		    echo "please check logs in $LOGDIR"
		fi;;
	    
	    local)
                # run locally
	        # source the Glide environment
		echo "source ${BASEDIR}/setup.sh"
		echo "nice python2 PublishFromPhedex.py --Dataset=$DATASET --Owner=$OWNER >& ${LOGDIR}/publish.$OWNER.$DATASET.log";;
		exitcode=$?
		if $exitcode; then
		    echo "running Glide locally failed"
		    echo "please check logs in $LOGDIR"
		fi;;
	    *)
		echo "unsupported submission method chosen !!"
		exit 5;;
	esac
	exit $exitcode;;
    *)
	echo "unsuported publication method !!"
	exit 20;;
esac

