#!/bin/sh

##H Publish downloaded file into the local catalogue.
##H
##H Usage: FileDownloadPublish LOCAL-CAT LOG-DIR GUID PFN XML-CAT
##H        CAT-PREFIX TRANSFER-URL
##H
##H Appends information about GUID/PFN, recorded as XML-CAT into
##H LOCAL-CAT.  Rewrites PFN to format usable for local analysis
##H (rfio:/castor/cern.ch/...); PFN can be of these forms:
##H   gsiftp://castorgrid.cern.ch/castor/cern.ch/cms/PCP04/*
##H   srm://castorgrid.cern.ch/castor/cern.ch/cms/PCP04/*
##H   srm://www.cern.ch/castor/cern.ch/cms/PCP04/*
##H   file:///data/test/*
##H   file:/data/test/*
##H
##H The local PFN also added into the LOG-DIR directory as file name
##H GUID.  The contents of this directory is harvested by separate
##H local daemons that change the file ownership and mode.

# Switch off POOL noise
export POOL_OUTMSG_LEVEL=W

# Pick up arguments
mycat="$1" log="$2" catprefix="$3" transprefix="$4" guid="$5" pfn="$6" cat="$7"
[ -z "$mycat" ] && { echo "no destination catalogue" 1>&2; exit 1; }
[ -z "$log" ] && { echo "no log file" 1>&2; exit 1; }
[ -z "$guid" ] && { echo "no guid" 1>&2; exit 1; }
[ -z "$pfn" ] && { echo "no pfn" 1>&2; exit 1; }
[ -z "$cat" ] && { echo "no source catalogue" 1>&2; exit 1; }
[ -r "$cat" ] || { echo "$cat: cannot read" 1>&2; exit 1; }
[ -z "$catprefix" ] && { echo "no catprefix" 1>&2; exit 1; }
[ -z "$transprefix" ] && { echo "no transprefix" 1>&2; exit 1; }


# Rewrite the PFN to local PFN using catalogue prefix... (except not file: paths)
locpfn=$(echo "$pfn" | sed "s|^$transprefix|$catprefix|")

if [ X"$locpfn" != X"$pfn" ]; then
  FCaddReplica -u "file:$cat" -g "$guid" -r "$locpfn"
  FCdeletePFN -u "file:$cat" -p "$pfn"
fi

# Publish into the main catalogue, and if zip archive, also contents.
FCpublish -d "$mycat" -u "file:$cat" || exit $?
if grep "ZippedEVD" $cat >/dev/null; then
  source ${VO_CMS_SW_DIR}/cmsset_slc3_ia32_gcc323.sh
  $(dirname $0)/../../Utilities/ZipPublishHelper "$mycat" "$locpfn" \
    ${VO_CMS_SW_DIR}/Releases/COBRA/COBRA_8_5_1 slc3_ia32_gcc323 scramv1 || exit $?
fi

# Log the guid and pfn into the transfer history directory
[ -d "$log" ] || mkdir -p "$log"
echo "$locpfn" >> "$log/$guid"

# Report success
exit 0
