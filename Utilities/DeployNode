#!/usr/bin/env perl

##H Utility to deploy a node configuration.  Creates a node directory
##H structure, deploys the agent code from checked out CVS repository.
##H
##H Usage: ?
##H
##H *** Ask Tim Barrass to document this program. ***

BEGIN { use strict; use warnings;
  my $me = $0; $me =~ s|.*/||;
  our $home = $0; $home =~ s|/[^/]+$||; $home ||= "."; $home .= "/../Toolkit/Common";
  unshift(@INC, $home);
}
use File::Path;
use UtilsHelp;

while (scalar @ARGV)
{
    if ($ARGV[0] eq '-node' && scalar @ARGV > 1)
    { shift (@ARGV); $g_nodename = shift(@ARGV); }
    elsif ($ARGV[0] eq '-base' && scalar @ARGV > 1)
    { shift (@ARGV); $g_basepath = shift(@ARGV); }
    elsif ($ARGV[0] eq '-cat' && scalar @ARGV > 1)
    { shift (@ARGV); $g_cat = shift(@ARGV); }
    elsif ($ARGV[0] eq '-dbconfig' && scalar @ARGV > 1)
    { shift (@ARGV); $g_dbconfig = shift(@ARGV); }
    elsif ($ARGV[0] eq '-management' && scalar @ARGV > 1)
    { shift (@ARGV); $g_management = 1 }
    elsif ($ARGV[0] eq '-h')
    { &usage(); }
    else
    { last; }
}

if (@ARGV || !$g_basepath || !$g_cat || !$g_dbconfig)
{
    die "Insufficient parameters, use -h for help.\n";
}

        
# ######################################
# Main bulk
# ######################################

print "Creating directory structure...\n";
&mkpath ([ "$g_basepath/$g_nodename",
	   "$g_basepath/$g_nodename/node",
	   "$g_basepath/$g_nodename/state",
	   "$g_basepath/$g_nodename/logs",
	   "$g_basepath/$g_nodename/SE" ]);

if ($g_management == 0) {
    print "Creating node configuration...\n";
    foreach $file (<$g_basepath/PHEDEX/Testbed/Standalone/Node*>) {
	$output = $file; $output =~ s|.*/Node||;
	$output = "$g_basepath/$g_nodename/node/$output";
	open (INPUT, "< $file") or die "$file: $!\n";
	open (OUTPUT, "> $output") or die "$output: $!\n";
	while (<INPUT>) {
	    s/<base>/$g_basepath/g;
	    s/<node>/$g_nodename/g;
	    s/<db>/$g_db/g;
	    s/<user>/$g_user/g;
	    s/<pass>/$g_pass/g;
	    s/<cat>/$g_cat/g;
	    print OUTPUT;
	}
	close (INPUT);
	close (OUTPUT);
	chmod 0755, $output if -x $file;
    }
} else {
    print "Creating node configuration...\n";
    foreach $file (<$g_basepath/PHEDEX/Testbed/Standalone/Mgr*>) {
	$output = $file; $output =~ s|.*/Mgr||;
	$output = "$g_basepath/$g_nodename/node/$output";
	open (INPUT, "< $file") or die "$file: $!\n";
	open (OUTPUT, "> $output") or die "$output: $!\n";
	while (<INPUT>) {
	    s/<base>/$g_basepath/g;
	    s/<node>/$g_nodename/g;
	    s/<db>/$g_db/g;
	    s/<user>/$g_user/g;
	    s/<pass>/$g_pass/g;
	    s/<cat>/$g_cat/g;
	    print OUTPUT;
	}
	close (INPUT);
	close (OUTPUT);
	chmod 0755, $output if -x $file;
    }
}

exit 0;
