#!/usr/bin/env perl
use strict;
use Getopt::Long;
use PHEDEX::CLI::UserAgent;

my ($datasvc_url,$response,$content,$method,$timeout,$collName,$time_since,$time_until,$temp,$pua,$target,%payload);
$timeout = 500;
$datasvc_url = 'https://pheSpaceMon.cern.ch/phedex/datasvc';

sub usage {
  print <<EOF;
  Usage:

  spaceQuery  --collName NAME --time_since DATE --time_until DATE

  Additional options:
  --url DATASVC     overrides the default data service url:
                    $datasvc_url
EOF
  exit 0;
}

GetOptions(
        'collName=s'    => \$collName,
        'time_since=i'    => \$time_since,
        'time_until=i'    => \$time_until,
        'url=s'    => \$datasvc_url,
        'help|h'         => sub { &usage() }
      );
$pua = PHEDEX::CLI::UserAgent->new
    (
      URL        => $datasvc_url,
      FORMAT    => 'perl',
      INSTANCE    => 'debug',
    );
$pua->timeout($timeout) if $timeout;
$pua->CALL('storageusage');
$pua->Dump();
$target = $pua->target;
%payload = @ARGV;
$payload{collName} = $collName;
$payload{time_since} = $time_since;
$payload{time_until} = $time_until;
foreach ( keys %payload ) {
  print $_, " ", $payload{$_}, "\n";
}

$response = $pua->get($target,\%payload);
if ( $pua->response_ok($response) )
{
# HTTP call returned correctly, print contents and quit...
  no strict 'vars';
  $content = eval($response->content());
  $content = $content->{PHEDEX}{STORAGEUSAGE};
  foreach $record ( @{$content} ) {
    print "Record:\n  ",join(', ',map { "$_:$record->{$_}" } sort keys %{$record}),"\n";
  }
  exit 0;
}
else
{
# Something went wrong...
  chomp $content;
  print "Error from server ",$response->code(),"(",$response->message(),"), output below:\n",
        $response->content(),"\n";
  die "exiting after failure\n";
}
