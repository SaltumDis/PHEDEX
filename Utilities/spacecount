#!/usr/bin/env perl
use strict;
use warnings;
use Getopt::Long qw /:config pass_through require_order /;
use PHEDEX::Core::DB;
use PHEDEX::Core::Loader;
use PHEDEX::Core::Catalogue;
use PHEDEX::Core::Util ( qw / str_hash / );

my ($loader,$module,$interface,$ns);
my ($verbose,$debug,$terse);
my (@entries,$lfnlist,$pfnlist,$input,$catalogue,$result,$command);
my ($db,$node);
sub usage
{
  print <<EOF;

  Usage:

  spacecount  INTERFACE {OPTIONS} [COMMAND]

  INTERFACE specifies the parsing method 

  OPTIONS are --verbose, --debug, --help, and anything else that the
  interface might support. Use --help per interface to find out more.

  COMMAND is an operation the INTERFACE supports,
  The --help option for the interface will list all available commands.

  Following interface protocols in this installation 
  provide support for spacecount:
EOF
  print " '",join("', '", grep (/\/spacecount/,sort keys %{$loader->Commands})),"'\n\n";
  exit 0;
}

$loader = PHEDEX::Core::Loader->new( NAMESPACE => 'PHEDEX::Namespace',
				     REJECT    => [ qw / common namespace / ] );

GetOptions(
           "lfnlist|l=s"    => \$lfnlist,
           "pfnlist|p=s"    => \$pfnlist,
           "catalogue|c=s"  => \$catalogue,
           "db=s"   => \$db,
           "node=s"  => \$node,
           "verbose|v+"     => \$verbose,
           "debug+"         => \$debug,
           "help|h"         => sub { &usage() }
	  );

$interface = shift;
die "WARNING: INTERFACE argument must be specified\n" unless $interface;

$module = $loader->Load($interface);
$ns = $module->new();
$ns-> {NOCACHE} = 1;


while ( $command = shift @ARGV )
{
# For common options parameter name should correspond to the options name:
  my $f = $ns->{DUMP}; 
  $result = $ns->$command ($f);
  print "$f $command = ",str_hash($result),"\n";
}
