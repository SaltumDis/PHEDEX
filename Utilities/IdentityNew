#!/usr/bin/env perl

##H Insert a new identity into the DB
##H
##H Usage:
##H   ImportSites -db DBCONFIG -dn DISTINGUISHED_NAME -email EMAIL [-global_admin]
##H  
##H   DISTINGUISHED_NAME is the user's certificate DN
##H   EMAIL is the email of the user
##H   -global_admin is an option that makes this user a global admin
##H

BEGIN {
    $^W = 1; use strict; use warnings;
    our $me = $0; $me =~ s|.*/||;
    our $home = $0; $home =~ s|/[^/]+$||; $home ||= "."; $home .= "/../Toolkit/Common";
    unshift(@INC, $home);
}

# Process command line arguments.
my %args;
use Getopt::Long;
use UtilsHelp;
use UtilsDB;

&GetOptions ("db=s"            => \$args{DBCONFIG},
	     "dn=s"            => \$args{DN},
	     "email=s"         => \$args{EMAIL},
	     "global_admin"    => \$args{GLOBAL_ADMIN},
	     "help|h"          => sub { &usage() });

# Check arguments.
foreach ( qw(DBCONFIG DN EMAIL) ) {
    if (!$args{$_}) {
    	die "Insufficient parameters, use -h for help.\n";
    }
}

my $self = { DBCONFIG => $args{DBCONFIG} };
my $dbh = &connectToDatabase ($self, 0);

# Insert the identity if it is not already there
unless ( fetch_identity_id($dbh, $args{DN}) ) {
    print "Inserting identity $args{DN}...";
    &dbexec($dbh,
	    qq{insert into t_adm_identity (id) 
		   values (seq_adm_identity.nextval) });
    
    my %attr = ('Distinguished name' => $args{DN}, 
		'E-mail' => $args{EMAIL});

    foreach my $name (keys %attr) {
	&dbexec($dbh,
		qq{insert into t_adm_identity_attr (id, identity, name, value)
		       values (seq_adm_identity_attr.nextval, seq_adm_identity.currval,
			       :name, :value)},
		':name' => $name,
		':value' => $attr{$name});
    }
    print "Done.\n";
} else {
    print "Identity for $args{DN} already exists.\n";
}

if ($args{GLOBAL_ADMIN}) {
    print "Making global admin...";
    my $id = fetch_identity_id($dbh, $args{DN});
    &dbexec($dbh,
	    qq{insert into t_adm_global_admin (identity)
		   values (:identity)},
	    ':identity' => $id);
    print "Done.\n";
}

print "Committing...";
$dbh->commit();
print "Done.\n";

&disconnectFromDatabase($self, $dbh, 1);


# Fetches the identity id given the distinguished name
sub fetch_identity_id 
{
    my ($dbh, $dn) = @_;
    my $q = &dbexec($dbh, qq{ select identity from t_adm_identity_attr
	        	       where name = 'Distinguished name'
		                 and value = :dn },
		    ':dn' => $dn);
    return $q->fetchrow_array();
}
