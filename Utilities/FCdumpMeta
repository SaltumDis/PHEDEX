#!/usr/bin/env python2.2
from PyFileCatalog import *
from PyFCContainer import *
from PyFCAction import *
import os,os.path,getopt

def usage():
    print 'FCdumpMeta -u catalog_contactstring [-q query]'

class myobj(object):
    def __init__(self):
	self.cat = None
	self.query = ''
        try:
            optlist,rest = getopt.getopt (sys.argv[1:],'q:u:')
        except getopt.GetoptError:
            usage()
            sys.exit(2)
        for o,a in optlist:
            if o == '-u':
                self.cat = a
            elif o == '-q':
                self.query = a
            else:
                usage()
                sys.exit(2)

	if self.cat == None or len(rest) != 0:
	    usage()
	    sys.exit(2)

        try:
            self.x=PyFileCatalog.PyFileCatalog()
            self.x.setWriteCatalog(self.cat)
        except PyFileCatalogError, er:
            print >> sys.stderr, 'File catalogue error:', er
            self.x.rollback()

    def list(self):
        try:
	    l=PyFClookup()
            self.x.setAction(l)
            self.x.connect()
            self.x.start()
            results=PyFCContainer.PyFCContainer(self.x,META,200)
            l.lookupMetaDataByQuery(self.query,results)
            while results.hasNext():
                meta=results.Next()
		print ",".join(["(%s,%s)" % item for item in meta.items()])
            self.x.commit(REFRESH)
	    self.x.disconnect()
        except PyFileCatalogError, er:
            print >> sys.stderr, 'File catalogue error:', er
            self.x.rollback()
        except Exception, er:
            print >> sys.stderr, 'An error:', er
            self.x.rollback()

if __name__=="__main__":
    y=myobj()
    y.list()
