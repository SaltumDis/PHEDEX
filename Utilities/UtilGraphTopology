#!/usr/bin/env perl

##H Produce "dot" graph from the transfer topology.
##H
##H USAGE: UtilTopologyGraph -db FILE[:SECTION]

BEGIN {
  use strict; use warnings; $^W=1;
  our $me = $0; $me =~ s|.*/||;
  our $home = $0; $home =~ s|/[^/]+$||; $home ||= "."; $home .= "/../Toolkit/Common";
  unshift(@INC, $home); }

my %args;
use Getopt::Long;
use UtilsHelp;
use UtilsDB;
&GetOptions ("db=s"        => \$args{DBCONFIG},
	     "help|h"      => sub { &usage() });

if (@ARGV || !$args{DBCONFIG})
{
    die "Incorrect parameters, use -h for help.\n";
}

my $dbh = &connectToDatabase (\%args, 0);
my $nodes = $dbh->selectall_arrayref(qq{select node, neighbour, hops from t_node_neighbour});
&disconnectFromDatabase(\%args, $dbh, 1);
my %nodenames = map { $_->[0] => 1 } @$nodes;

print "digraph routing {\n",
      "  fontname=\"Helvetica\"; fontsize=12; center=true; ratio=compress; concentrate=true;\n",
      "  label=\"\\nPhEDEx Routing Table\\n\"\n\n",
      "  node [shape=ellipse, fontname=\"Helvetica-Bold\", fontsize=12 ]\n",
      "  edge [fontname=\"Helvetica\", fontsize=12 ]\n\n",
      (map { qq{  "$_" [ style=filled, fillcolor="#FFFFCC", color="#000000", fontcolor="#000000" ]\n} }
       grep (/^T1/, sort keys %nodenames)),
      (map { qq{  "$_" [ style=filled, fillcolor="#CCFF99", color="#000000", fontcolor="#000000" ]\n} }
       grep (/^T2/, sort keys %nodenames)),
      (map { qq{  "$_" [ style=filled, fillcolor="#CCCCFF", color="#000000", fontcolor="#000000" ]\n} }
       grep (! /^T[12]/, sort keys %nodenames)),
      (map { "  \"$_->[0]\" -> \"$_->[1]\" [ weight=@{[.5 + 1/$_->[2]]}]\n" } @$nodes),
      
      "}\n";
