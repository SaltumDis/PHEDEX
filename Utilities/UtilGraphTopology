#!/usr/bin/perl

##H Produce "dot" graph from the transfer topology.
##H
##H USAGE: UtilTopologyGraph DATABASE

BEGIN { use strict; use warnings;
  my $me = $0; $me =~ s|.*/||;
  my $home = $0; $home =~ s|/[^/]+$||; $home ||= ".";
  unshift(@INC, $home); }
use DBI;
use UtilsTR;

while (scalar @ARGV)
{
    if ($ARGV[0] eq '-h' || $ARGV[0] eq '--help') {
	&usage ();
    } elsif ($ARGV[0] eq '--') {
	shift (@ARGV); last;
    } elsif ($ARGV[0] =~ '^-') {
	&usage ("$0: unrecognised option $ARGV[0]\n\n");
    } else {
	last;
    }
}

my $db = shift;

defined $db or die "usage: $0 DATABASE\n";

my $dbh = DBI->connect ("DBI:Oracle:$db", "cms_transfermgmt_reader",
			"slightlyJaundiced", { RaiseError => 1, AutoCommit => 1 });

my $nodes = $dbh->selectall_arrayref(qq{
		select from_node, gateway from t_routing
		where to_node = gateway});

print "digraph routing {\n",
      "  fontname=\"Helvetica\"; fontsize=12; center=true; ratio=compress; concentrate=true;\n",
      "  label=\"\\nPhEDEx Routing Table\\n\"\n\n",
      "  node [shape=ellipse, fontname=\"Helvetica-Bold\", fontsize=12 ]\n",
      "  edge [fontname=\"Helvetica\", fontsize=12 ]\n\n",
      (map { "  \"$_->[0]\" -> \"$_->[1]\" []\n" } @$nodes),
      "}\n";
