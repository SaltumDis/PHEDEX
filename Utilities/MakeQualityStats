#!/usr/bin/env perl

##H Create statistics about transfer quality
##H
##H Usage:
##H   MakeQualityStats -db FILE[:SECTION]
##H
##H -db        database connection configuration parameter file

BEGIN {
  $^W = 1; use strict; use warnings;
  our $me = $0; $me =~ s|.*/||;
  our $home = $0; $home =~ s|/[^/]+$||; $home ||= "."; $home .= "/../Toolkit/Common";
  unshift(@INC, $home);
}
use UtilsHelp;
use UtilsDB;
use POSIX;

# Process command line arguments.
my %args = ();
while (scalar @ARGV)
{
    if ($ARGV[0] eq '-db' && scalar @ARGV > 1)
    { shift (@ARGV); $args{DBCONFIG} = shift(@ARGV); }
    elsif ($ARGV[0] eq '-h')
    { &usage(); }
    else
    { last; }
}

# Check arguments.
if (@ARGV || !$args{DBCONFIG})
{
    die "Insufficient parameters, use -h for help.\n";
}

# Fetch all completed transfers, convert to the requested time unit
# and print out as such.  All the data processing will be done in
# the plotting utilities.
$dbh = &connectToDatabase (\%args, 0);
my $data = &dbexec ($dbh, qq{
    select
        trunc(timestamp/3600)*3600,
	to_node,
	sum(case when to_new_state = 2 then 1 else 0 end),
	sum(case when to_old_state = 2 and to_new_state >= 100 then 1 else 0 end),
	sum(case when to_new_state = 3 then 1 else 0 end)
    from t_transfer_history
    group by trunc(timestamp/3600)*3600, to_node});

print "Month,Week,Day,Hour,Node,Attempts,Failures,Completed\n";
while (my ($time, $node, $attempts, $failures, $completed) = $data->fetchrow())
{
    my @gmtime = gmtime(int($time));
    my $month = strftime('%Y%m', @gmtime);
    my $week = strftime('%Y%V', @gmtime);
    my $day = strftime('%Y%m%d', @gmtime);
    my $hour = strftime('%Y%m%dZ%H00', @gmtime);
    print "$month,$week,$day,$hour,$node,$attempts,$failures,$completed\n";
}
$data->finish ();
$dbh->disconnect ();
undef $dbh;

# Done.
exit 0;
