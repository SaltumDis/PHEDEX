#!/usr/bin/env perl


BEGIN {
    $^W = 1; use strict; use warnings;
    our $me = $0; $me =~ s|.*/||;
    our $home = $0; $home =~ s|/[^/]+$||; $home ||= "."; $home .= "/../Toolkit/Common";
    unshift(@INC, $home);
}

# Process command line arguments.
my %args;
use Getopt::Long;
use UtilsHelp;
use UtilsDB;

&GetOptions ("db=s"            => \$args{DBCONFIG},
	     "help|h"          => sub { &usage() });

# Check arguments.
foreach ( qw(DBCONFIG) ) {
    if (!$args{$_}) {
    	die "Insufficient parameters, use -h for help.\n";
    }
}

my $self = { DBCONFIG => $args{DBCONFIG} };
my $dbh = &connectToDatabase ($self, 0);

my $now = time();
my $sql = qq{select dn from t_adm_identity};
my $q = &dbexec($dbh, $sql);
while (my ($dn) = $q->fetchrow()) {
    my $name = &dn_to_human_name($dn);
    my ($sth, $up) = &dbexec($dbh, 
			     qq{update t_adm_identity 
				    set name = :name, time_update = :time_update 
				    where dn=:dn},
			     ':name' => $name,
			     ':time_update' => $now,
			     ':dn' => $dn);
    print "Updated $up $name $dn\n";
}

print "Committing...";
$dbh->commit();
print "Done.\n";

&disconnectFromDatabase($self, $dbh, 1);

exit;

sub dn_to_human_name
{
    my $dn = shift @_;
    return undef unless $dn;
    my @names = ($dn =~ m:/CN=([^/]+?)[\s\d]*(/|$):g);
		 my $name = $names[0];
		 foreach (@names) {
		     $name = $_ if length $_ > length $name;
		 }
		 $name =~ s/\b(\w)/\U$1/g;
		 return $name;
	     }
