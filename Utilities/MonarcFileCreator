#!/usr/bin/perl

##H    This scrip creates job submision files
##H
##H    Usage:
##H
##H       MonarcFileCreator <copy command to MSS> <batch job submit command> <queue type> <storage path> <site> [<batch job user> <user's email>]
##H
##H       Start it from somewhere on your afs area where you can submit jobs.
##H       
##H       Creates a jobs/ directory and stores all job files in it. Also creates SubmitAllJobs.sh file 
##H       to submit all job files to lxbatch. Each job file creates file around 2.6 GB, calculates 
##H       a cksum, gives file size in stdout and copies file to castor.
##H
##H       File creation is done in two steps. First there is a creation of a seed (23KB) file filled
##H       with random characters. Seed file is then automaticaly copied copied to lxbatch machine 
##H       from afs area along with the CreateFile script (created with this script). CreateFile script 
##H       and creates the resulting around 2.5 GB file which is then copied to castor and removed 
##H       from lxbatch.
##H

if(!$ARGV[0] || !$ARGV[1]|| !$ARGV[2] || !$ARGV[3] || !$ARGV[4]) {  die "Insufficient parameters, use: \n
MonarcFileCreator <copy command to MSS> <batch job submit command> <queue type> <storage path> <site> [<batch job user> <user's email>] \n
Example: \n
MonarcFileCreator rfcp bsub 8nm /castor/cern.ch/cms/store/phedex_monarctest CERN -u user_email
MonarcFileCreator dccp qsub short /data/store/phedex_monarctest SITE -M user_email \n\n";}
#print $ARGV[0]," ",$ARGV[1]," ",$ARGV[2]," ",$ARGV[3]," ",$ARGV[4]" \n";

my $i = 0;

my $command_file = "SubmitAllJobs.sh";
my $create_file = "CreateFile";

open DATA, ">>$command_file" or die "can't open $command_file $!";
print DATA 'cd jobs'."\n";
close (DATA);
print "  Creating seed (23KB) file... this could take a few minutes... "."\n";
`dd if=/dev/random of=seed count=625`;
open DATA, ">>$create_file" or die "can't open $create_file $!";

print DATA '#!/usr/bin/perl '."\n";
print DATA 'while($i<$ARGV[0]) { '."\n";
print DATA '    `cat seed >> MonarcTest`; '."\n";
print DATA '    $i++;   '."\n";
print DATA '}  '."\n";
close (DATA);

while( $i < 256) {
$hex = sprintf("%0.2X", $i);
my $size = 3*$i+56375;
if($i==1) {print "File with lowest size to be created : "; print 0.043*$size."M \n";}
if($i==255) {print "File with highest size to be created : "; print 0.043*$size."M \n";}
my $data_file = "MonarcTest_".$hex.".job";
open DATA, ">$data_file" or die "can't open $data_file $!";
open DATA, ">$data_file" or die "can't open $data_file $!";
print DATA '#!/bin/sh'."\n";
print DATA 'export STAGE_HOST=castorcms'."\n";
print DATA 'export STAGE_SVCCLASS=default'."\n";
print DATA 'export RFIO_USE_CASTOR_V2=yes'."\n";
print DATA 'cp '.$ENV{PWD}.'/jobs/seed .'."\n";
print DATA 'cp '.$ENV{PWD}.'/jobs/CreateFile .'."\n";
print DATA './CreateFile '.$size."\n";
print DATA $ARGV[0].' MonarcTest '.$ARGV[3].'/MonarcTest_'.$ARGV[4].'_'.$hex."\n";
print DATA 'cat >> '.$ENV{PWD}.'/jobs/Monarc_files_info_'.$hex.' << END_OF_DATA'."\n"; 
print DATA $hex.','.'` cksum MonarcTest | sed \'s/[^0-9][^0-9]*/,/\' | sed \'s/MonarcTest//g\'`'."\n";
print DATA 'END_OF_DATA'."\n";
print DATA 'rm -f seed CreateFile MonarcTest'."\n";
close (DATA);
open DATA, ">>$command_file" or die "can't open $command_file $!";
if($ARGV[5] && $ARGV[5]) {print DATA $ARGV[1].' -q '.$ARGV[2].' '.$ARGV[5].' '.$ARGV[6].' MonarcTest_'.$hex.".job\n";}
if(!$ARGV[5] || !$ARGV[6]) {print DATA $ARGV[1].' -q '.$ARGV[2].' MonarcTest_'.$hex.".job\n";}
close (DATA);
$i++;
}
open DATA, ">>$command_file" or die "can't open $command_file $!";
print DATA "echo '=========================================='"."\n";
print DATA "echo 'when all files are created do: '"."\n";
print DATA "echo '    cat jobs/Monarc_files_info_* > monarc_files_info'"."\n";
print DATA "echo 'and copy monarc_files_info file in folder where MonarcFileInjector is.'"."\n";
print DATA "echo 'i.e. in SITECONF/".$ARGV[4]."/PhEDEx folder '"."\n";
print DATA "echo '=========================================='"."\n";
close (DATA);
system 'chmod a+x CreateFile *.job SubmitAllJobs.sh';
mkdir("jobs", 0755) || die "Cannot mkdir jobs: $!";
system 'mv *.job seed CreateFile jobs/';
