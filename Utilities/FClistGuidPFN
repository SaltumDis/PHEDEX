#!/usr/bin/env python
from PyFileCatalog import *
from PyFCContainer import *
from PyFCAction import *
import unittest,os,os.path,getopt

def usage():
    print >> sys.stderr, 'FClistGuidPFN {-g | -p | -q} [-m] -u catalog_contactstring ITEM...'
    print >> sys.stderr, '  -m means ITEMs are patterns, not exact strings'
    print >> sys.stderr, '  -g means ITEMs are guids (or guid patterns if -m)'
    print >> sys.stderr, '  -p means ITEMs are PFNs (or PFN patterns if -m)'
    print >> sys.stderr, '  -q means ITEMs are general query patterns'
    print >> sys.stderr, '  -u specificies catalogue to contact'

class myobj(object):
    def __init__(self):
 	self.cat = None
	self.exact = 1
	self.mode = 'g'
        self.input=[]
        try:
            optlist,self.input = getopt.getopt (sys.argv[1:],'qmgpu:')
        except getopt.GetoptError:
            usage()
            sys.exit(2)
        for o,a in optlist:
            if o == '-u':
                self.cat = a
            elif o == '-g':
                self.mode = 'g'
            elif o == '-m':
                self.exact = 0
            elif o == '-p':
                self.mode = 'p'
            elif o == '-q':
                self.mode = 'q'
		self.exact = 0
            else:
                usage()
                sys.exit(2)
	if (self.cat == None):
	    usage()
	    sys.exit(2)
        try:
            self.x=PyFileCatalog.PyFileCatalog()
            self.x.setWriteCatalog(self.cat)
        except PyFileCatalogError, er:
            print >> sys.stderr, 'File catalogue error:', er
            self.x.rollback()

    def list(self):
        try:
            l = PyFClookup()
            self.x.setAction(l)
            self.x.connect()
            self.x.start()
            for i in self.input:
		try:
                    container = PyFCContainer.PyFCContainer(self.x,PFN,10000)
		    if (self.mode == 'g'):
			# lookup by guid: exact or query
			if (self.exact):
		            l.lookupPFN(i, container)
			else:
			    l.lookupPFNByQuery("guid like '" + i + "'", container)

		    elif (self.mode == 'p'):
			# lookup by pfn: exact or query
			if (self.exact):
		            result = l.lookupFileByPFN(i)
                            print result['guid'], i
			    continue
			else:
			    l.lookupPFNByQuery("pfname like '" + i + "'", container)

		    elif (self.mode == 'q'):
			# lookup by arbitrary query
			l.lookupPFNByQuery(i, container)

                    while container.hasNext():
                        entry = container.Next()
                        print entry[1], entry[0]

                except Exception:
		    # Swallow exception if we are in exact mode,
		    # keep going with other files.  Otherwise it
		    # is probably a hard error.
		    if (self.exact == 0): raise

            self.x.commit(REFRESH)
            self.x.disconnect()
        except PyFileCatalogError, er:
             print >> sys.stderr, 'File catalogue error:', er
	     sys.exit (1)
	except Exception, er:
	     print >> sys.stderr, 'An exception occurred:', er
	     sys.exit (1)

if __name__=="__main__":
    y=myobj()
    y.list()
