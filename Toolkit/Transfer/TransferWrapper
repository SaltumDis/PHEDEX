#!/usr/bin/env perl

##H Helper tool to oversee running of a transfer job.
##H
##H This tool monitors an actual transfer as long as the job runs,
##H handles the log output and generates the final transfer report
##H for each file in the copy job.  One instance of the tool is
##H started for every sub-process invocation (srmcp, etc.).
##H
##H Usage:
##H   TransferWrapper COPY-JOB-DIR TIMEOUT COMMAND [ARGS...]
##H
##H COPY-JOB-DIR is the download agent copy job directory.  It
##H contains all the state information about this particular job.
##H
##H COMMAND and ARGS are the command to execute.

BEGIN {
  use strict; use warnings; $^W=1;
  our $me = $0; $me =~ s|.*/||;
  our $home = $0; $home =~ s|/[^/]+$||; $home ||= "."; $home .= "/../../Toolkit/Common";
  unshift(@INC, $home);
}

use UtilsJobManager;
use UtilsCommand;
use UtilsTiming;

# Handle arguments.
my $copyjob = shift(@ARGV);
die "$0: no copy job specified\n" if ! $copyjob;
die "$copyjob: no such directory\n" if ! -d $copyjob;

my $timeout = shift(@ARGV);
die "$timeout: not a valid timeout\n" if $timeout !~ /^\d+$/;
$timeout = undef if $timeout == 0;

# Prepare job exit status holder and prepare saved info.
my $jobstatus = undef;
my $signalled = undef;

unlink(<$copyjob/{command,log,time*,exit*,completed,signalled,live}>);
&output("$copyjob/command", "@ARGV")
    or die "$copyjob/command: $!\n";
&output("$copyjob/time-start", &mytimeofday())
    or die "$copyjob/time-start: $!\n";

# Redirect standard input, output and error.
open(STDIN, "</dev/null");
open(STDOUT, ">> $copyjob/wrapper-log");
open(STDERR, ">&STDOUT");

# Start the job.
my $jobs = new UtilsJobManager (NJOBS => 1);
$jobs->addJob (sub { $jobstatus = $_[0] }, 
    { TIMEOUT => $timeout, LOGFILE => "$copyjob/log" },
    @ARGV);

# Wait for the job to exit.  Indicate liveness.
$SIG{INT} = $SIG{TERM} = sub { $signalled = shift; $jobs->killAllJobs() };
my $n = 0;
while (@{$$jobs{JOBS}})
{
    &touch("$copyjob/live") if ! ($n++ % 60);
    $jobs->pumpJobs();
    sleep (1);
}

# Job status should now be set.
die "$0: job status lost!\n" if ! $jobstatus;

# Generate final report
if (defined $signalled)
{
    &output("$copyjob/signalled", $signalled)
        or die "$copyjob/signalled: $!\n";
}
elsif (exists $$jobstatus{SIGNAL})
{
    &output("$copyjob/timed-out", $$jobstatus{SIGNAL})
        or die "$copyjob/timed-out: $!\n";
}
&output("$copyjob/time-end", &mytimeofday())
    or die "$copyjob/time-end: $!\n";
&output("$copyjob/exit-code", $$jobstatus{STATUS})
    or die "$copyjob/exit-code: $!\n";
&touch("$copyjob/completed");
exit(0);
