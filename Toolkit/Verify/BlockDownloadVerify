#! /usr/bin/env perl

##H
##H This agent performs the verification of downloaded blocks.
##H Ask Tony how it works...
##H
##H
##H Usage:
##H   BlockDownloadVerify
##H      -state DIRECTORY -nodes NODE
##H      -db FILE[:SECTION] [-log OUT]
##H
##H -state         agent state directory.
##H -nodes         nodes to run and check files for.
##H -db            database connection configuration parameter file.
##H -log           where to redirect logging information.
##H

my $debug_me = 1;

######################################################################
use Getopt::Long;
use PHEDEX::Core::Help;
use PHEDEX::BlockConsistency::Agent;

&GetOptions ("state=s"      => \$args{DROPDIR},
	     "log=s"        => \$args{LOGFILE},
	     "db=s"         => \$args{DBCONFIG},
	     "label=s"      => \$args{LABEL},
	      "storagemap=s"=> \$args{STORAGEMAP},

             "nodes=s"      => sub { push(@{$args{NODES}}, split(/,/, $_[1])) },
             "ignore=s"     => sub { push(@{$args{IGNORE_NODES}}, split(/,/, $_[1])) },
             "accept=s"     => sub { push(@{$args{ACCEPT_NODES}}, split(/,/, $_[1])) },
	     "help|h"	    => sub { &usage() },
	     "use_srm"      => \$args{USE_SRM},
	     "use_rfdir"    => \$args{RFIO_USES_RFDIR},
	     "preload=s"    => \$args{PRELOAD},
	    );

$args{USE_SRM} = 'y' if defined($args{USE_SRM});
foreach ( keys %args ) { delete $args{$_} unless defined $args{$_}; }
my $agent = PHEDEX::BlockConsistency::Agent->new(%args, @ARGV);
POE::Kernel->run();
print "POE kernel has ended, now I shoot myself\n";
exit 0;
