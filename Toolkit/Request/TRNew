#!/usr/bin/env perl

##H Create a new transfer request.
##H
##H Usage: TRNew REQUEST [AREA]
##H
##H REQUEST is the name of the new request, must be unique, and
##H must not exist yet.  Initialises the request as an empty
##H ticket in AREA, by default the current directory.  Use
##H TRNewLoc and TRNewData to add transfer destinations and
##H data selections to it.

# Eventually record everything in a database instead of files.
# In that case, we need to track request status, such as
# "tentative", "authorised", "applied", etc.

BEGIN {
  use strict; use warnings; $^W=1;
  our $me = $0; $me =~ s|.*/||;
  our $home = $0; $home =~ s|/[^/]+$||; $home ||= "."; $home .= "/../../Toolkit/Common";
  unshift(@INC, $home);
}

use UtilsHelp;
use UtilsNet;
use File::Path;
use Cwd;

while (scalar @ARGV)
{
    if ($ARGV[0] eq '-h') {
	&usage ();
    } elsif ($ARGV[0] eq '--') {
	shift (@ARGV); last;
    } elsif ($ARGV[0] =~ '^-') {
	&usage ("$0: unrecognised option $ARGV[0]\n\n");
    } else {
	last;
    }
}

my $request = shift (@ARGV);
my $area = shift (@ARGV) || &getcwd();
if (@ARGV || !$request || !$area)
{
    die "Incorrect parameters, use -h for help.\n";
}

# Create the area
! -e "$area/$request" or die "$area/$request: exists\n";

# Create ticket
(open (TICKET, "> $area/$request")
 && print(TICKET "@{[time()]} CMD $me @{[scalar getpwuid($<)]}\@@{[&getfullhostname()]}\n")
 && close (TICKET))
    or die "$area/$request: cannot create request ticket: $!\n";
