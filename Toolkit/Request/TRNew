#!/usr/bin/perl

##H Create a new transfer request.
##H
##H Usage: TRNew REQUEST [AREA]
##H
##H REQUEST is the name of the new request, must be unique, and
##H must not exist yet.  Creates the necessary directory structure
##H in AREA (default: current working directory) and in the request
##H database.
##H
##H The request is initialisd empty.  Use TRNewLoc and TRNewData
##H to add transfer destinations and data selections to it.
#
# REQUEST-DIR
#   RequestInfo/Ticket
#   AssignmentData
#   AssignmentInfo
#   Drops
#
# Record in database too?

# use DBI;
use UtilsTR;
use UtilsNet;
use File::Path;
use Cwd;

while (scalar @ARGV)
{
    if ($ARGV[0] eq '-h' || $ARGV[0] eq '--help') {
	&usage ();
    } elsif ($ARGV[0] eq '--') {
	shift (@ARGV); last;
    } elsif ($ARGV[0] =~ '^-') {
	&usage ("$0: unrecognised option $ARGV[0]\n\n");
    } else {
	last;
    }
}

my $request = shift;
my $area = shift || &getcwd();

defined $request && defined $area
  or die "usage: $0 REQUEST [AREA]\n";

# my $dbh = DBI->connect ("DBI:Oracle:$db", "cms_transfermgmt_reader",
# 			"slightlyJaundiced", { RaiseError => 1, AutoCommit => 1 });

# Create the area
! -e "$area/$request" or die "$area/$request: exists\n";
eval { &mkpath ([ "$area/$request/Request",
		  "$area/$request/AssignmentData",
		  "$area/$request/AssignmentInfo",
		  "$area/$request/Drops" ]); };
die "$area/$request: cannot create request structure: $@\n" if $@;

# Create ticket
(open (TICKET, "> $area/$request/Request/Ticket")
 && print(TICKET "@{[time()]} CMD TRNEW @{[scalar getpwuid($<)]}\@@{[&getfullhostname()]}\n")
 && close (TICKET))
    or die "$request: cannot create ticket: $!\n";
