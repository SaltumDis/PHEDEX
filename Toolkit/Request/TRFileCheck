#!/usr/bin/env perl

##H Checks the status of transfer request drops.
##H
##H Usage: TRFileCheck -db FILE[:SECTION] -mouth DIRECTORY [DROP...]
##H
##H DIRECTORY should be the directory containing the state
##H directories for the drop box agents, so the script can check
##H which drops are still being processed ("pending")
##H
##H FILE specifies database connection, as in all utilities.
##H
##H The rest of the arguments are expected to be "drop" directories.
##H This tool reads the XML catalogue fragments from the drops, gets
##H the list of the GUIDs, and compares both with the tmdb database
##H and the drop box area to evaluate the status of the drop.
##H
##H For each drop, a line is printed out with the name of the drop,
##H the number of files found in the catalogue, the number of guids
##H already registered in tmdb, and two flags, "TRANSFERRED" and/or
##H "PENDING".  The former indicates that all the files were found
##H in tmdb, the second indicates there is still a drop in the disk
##H queues.

BEGIN {
  use strict; use warnings;
  our $me = $0; $me =~ s|.*/||;
  our $home = $0; $home =~ s|/[^/]+$||; $home ||= "."; $home .= "/../../Toolkit/Common";
  unshift(@INC, $home);
}
use UtilsTR;
use UtilsDB;

while (scalar @ARGV)
{
    if ($ARGV[0] eq '-h') {
	&usage ();
    } elsif ($ARGV[0] eq '-mouth' && scalar @ARGV > 1) {
	shift (@ARGV); $args{MOUTH} = shift (@ARGV);
    } elsif ($ARGV[0] eq '-db' && scalar @ARGV > 1) {
	shift (@ARGV); $args{DBCONFIG} = shift (@ARGV);
    } elsif ($ARGV[0] eq '--') {
	shift (@ARGV); last;
    } elsif ($ARGV[0] =~ '^-') {
	&usage ("$0: unrecognised option $ARGV[0]\n\n");
    } else {
	last;
    }
}

my $table = "t_file";
if (!$args{MOUTH} || !$args{DBCONFIG})
{
    die "Incorrect parameters, use -h for help.\n";
}

my $dbh = &connectToDatabase (\%args, 0);
my $result = &checkAssignmentFiles ($args{MOUTH}, $dbh, @ARGV);
foreach my $drop (@ARGV)
{
    my $info = $result->{$drop};
    next if ! defined $info; # FIXME: warn/whine?

    # Print stats line
    my $pending  = $info->{IS_PENDING_TRANSFER} ? " PENDING" : "";
    my $transfer = $info->{IS_FULLY_TRANSFERRED} ? " TRANSFERRED" : "";
    my $onmss    = $info->{IS_FULLY_IN_MSS} ? " AVAILABLE" : "";
    print "$drop FILES $info->{N_FILES}",
          " MSS $info->{N_IN_MSS}",
	  " INTMDB $info->{N_TRANSFERRED}",
	  "$onmss$pending$transfer\n";
}
