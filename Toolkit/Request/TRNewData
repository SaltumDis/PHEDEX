#!/usr/bin/env perl

##H Expands data selection for a transfer request.
##H
##H Usage: TRNewData [-r] { -p | -f | -a } REQUEST [FILE...]
##H
##H REQUEST is the request directory previously created with TRNew.
##H If the "-r" option is used, cancels previous data selections;
##H otherwise appends new items to the list.
##H
##H The files given on the command line are read for the names of
##H the data selection patterns; the "-p" or "-f" options indicate
##H how the patterns should be interpreted.  With "-p" patterns
##H are "owner/dataset" globs, and anything matching the pattern
##H ought to be selected.  Without "-p" the patterns are expected
##H to be actual "owner/dataset" names.  With "-f" the patterns
##H select not only the datasets, but all their ancestry as well.
##H
##H The request will track both the input selection parameters and
##H what they expanded into.
##H
##H This program updates the transfer request ticket.
#
# FIXME: At the end (e.g. as a sole operation if no FILEs are
# given), check through the ticket history and complain if the
# list of the dataset, owner/dataset or assignment expansions
# from the patterns have changed.

BEGIN {
  use strict; use warnings; $^W=1;
  our $me = $0; $me =~ s|.*/||;
  our $home = $0; $home =~ s|/[^/]+$||; $home ||= "."; $home .= "/../../Toolkit/Common";
  unshift(@INC, $home);
}
use UtilsTR;
use UtilsNet;
use File::Path;
use Cwd;

my $now = time();
my $reset = 0;
my $mode = undef;
my $request = undef;
my @files = ();

while (scalar @ARGV)
{
    if ($ARGV[0] eq '-h') {
	&usage();
    } elsif ($ARGV[0] eq '-r') {
	$reset = 1; shift (@ARGV);
    } elsif ($ARGV[0] =~ '^-([pf])$') {
	$mode = $1; shift (@ARGV);
    } elsif ($ARGV[0] eq '--') {
	shift (@ARGV); last;
    } elsif ($ARGV[0] =~ '^-') {
	&usage ("$0: unrecognised option $ARGV[0]\n\n");
    } else {
	last;
    }
}

$request = shift (@ARGV);
@files = @ARGV;
if (!$request || (! $mode && @files))
{
    die "Incorrect parameters, use -h for help.\n";
}

-f "$request" or die "$request: not a transfer request\n";
my @userpats = &readPatterns (@files);
my @patterns = &expandPatterns ($mode, @userpats);

# Append to the ticket
(open (TICKET, ">> $request")
 && print(TICKET "$now CMD $me @{[scalar getpwuid($<)]}\@@{[&getfullhostname()]}\n")
 && (! $reset || print(TICKET "$now CANCEL DATA\n"))
 && (print(TICKET "$now DATA UPATS.$mode @userpats\n"))
 && (print(TICKET "$now DATA XPATS.$mode @{[ map { ref $_ ? join('/', @$_) : $_} @patterns]}\n"))
 && close (TICKET))
    or die "$request: cannot update ticket: $!\n";
