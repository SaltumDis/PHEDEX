#!/usr/bin/env python
"""
_DBSUpdateLocation_

Command line tool to update a block location (SE name) in DBS.

"""
from DBSAPI.dbsApi import DbsApi
from DBSAPI.dbsOptions import DbsOptionParser

import string,sys,os,getopt,time

usage="\n Usage: python DBSUpdateLocation <options> \n Options: \n --SE_NAME=<se_name> \t\t Storage Element \n [--BLOCK=<block> \t\t Add the SE_NAME to the BLOCK name by default \n \t\t [--remove \t remove the location instead of adding]] \n [--NEW_SE_NAME=<se_name> \t update the SE name changing the SE_NAME to the NEW_SE_NAME] \n [--DBSURL=<URL> \t\t DBS URL (if empty, default: https://cmsdbsprod.cern.ch:8443/cms_dbs_prod_global_writer/servlet/DBSServlet] \n"
valid = ['DBSURL=','BLOCK=','SE_NAME=','NEW_SE_NAME=','remove']
try:
    opts, args = getopt.getopt(sys.argv[1:], "", valid)
except getopt.GetoptError, ex:
    print usage
    print str(ex)
    sys.exit(1)

url= "https://cmsdbsprod.cern.ch:8443/cms_dbs_prod_global_writer/servlet/DBSServlet"
block = None
se_name = None
new_se = None
remove = False

for opt, arg in opts:
    if opt == "--BLOCK":
        block = arg
    if opt == "--SE_NAME":
        se_name = arg
    if opt == "--NEW_SE_NAME":
        new_se = arg
    if opt == "--DBSURL":
        url = arg
    if opt == "--remove":
        remove = True

if url == None:
    print "--DBSURL option not provided. For example :\n --DBSURL http://cmssrv18.fnal.gov:8989/DBS/servlet/DBSServlet"
    print usage
    sys.exit(1)

if (se_name == None or (block == None and new_se == None)):
    print "\n either --SE_NAME or --BLOCK or --NEW_SE_NAME is missing"
    print usage
    sys.exit(1)

print ">>>>> DBS URL : %s"%(url)

import logging
logging.disable(logging.INFO)

#  //
# // Get API to DBS
#//
args = {'url' : url , 'level' : 'ERROR'}
dbsapi = DbsApi(args)

#  //
# // Change SE name
#//
def updateDBSlocation (cold_se, cnew_se):
  print "Changing location %s to %s" % (cold_se,cnew_se)
  dbsapi.renameSE(cold_se,cnew_se)

#  //
# // Remove location
#//
def removeDBSlocation(rblock, rse_name):
  print "Removing location %s for block %s" % (rse_name,rblock)
  dbsapi.deleteReplicaFromBlock(rblock,rse_name)

#  //
# // Add location
#//
def addDBSlocation(ablock, ase_name):
  print "Adding location %s for block %s" % (ase_name,ablock)
  dbsapi.addReplicaToBlock(ase_name,ablock)

if (not remove and block != None):
  addDBSlocation(block,se_name)
elif (remove):
  if (block != None):
    removeDBSlocation(block,se_name)
  else:
    print usage
    sys.exit(1)

if (new_se != None):
  if (block != None):
    print "Warning: updating block location and updating SE name at once"  
  updateDBSlocation(se_name,new_se)
