#!/usr/bin/perl

## This T0 null agent that just receives drops and passes them on or
## destroys them.

BEGIN { use strict; $^W = 1; }
$me = $0; $me =~ s|.*/||;
$home = $0; $home =~ s|/[^/]+$||; $home ||= ".";
unshift(@INC, $home);

######################################################################
my %args;
while (scalar @ARGV)
{
    if ($ARGV[0] eq '-in' && scalar @ARGV > 1)
    { shift (@ARGV); $args{DROPDIR}= shift(@ARGV); }
    elsif ($ARGV[0] eq '-out' && scalar @ARGV > 1)
    { shift (@ARGV); push (@{$args{NEXTDIR}}, shift(@ARGV)); }
    elsif ($ARGV[0] eq '-wait' && scalar @ARGV > 1)
    { shift (@ARGV); $args{WAITTIME} = shift(@ARGV); }
    elsif ($ARGV[0] eq '-model' && scalar @ARGV > 1)
    { shift (@ARGV); $args{MODELFILE} = shift(@ARGV); }
    else
    { last; }
}
	
if (scalar @ARGV || !$args{DROPDIR})
{
    print STDERR
	"usage: $me -in IN-DROP-BOX [-out NEXT-DROP-BOX]\n",
	"    [-model MODEL] [-wait SECS-TO-WAIT]\n";
    exit (1);
}

(new DropNullAgent (%args))->process();

######################################################################
# Routines specific to this agent.
package DropNullAgent; use strict; use Exporter;
use File::Path;
use UtilsCommand;
use UtilsLogging;
use UtilsTiming;
use UtilsDelay;
use UtilsAgent;
use base 'UtilsAgent';

sub new
{
    my $proto = shift;
    my $class = ref($proto) || $proto;
    my $self = $class->SUPER::new(@_);
    my %params = ();
    my %args = (@_);
    map { $self->{$_} = $args{$_} || $params{$_} } keys %params;
    $self->{MODEL} = &readDelayModel ($args{MODELFILE}) if $args{MODELFILE};
    bless $self, $class;
    return $self;
}

# Actually process the drop.
sub processDrop
{
    my ($self, $drop) = @_;

    # Sanity checking
    return if (! $self->inspectDrop ($drop));
    delete $self->{BAD}{$drop};
    &timeStart($self->{STARTTIME});

    # If we have delay model, apply it
    &delayStatistically ($self->{MODEL}) if $self->{MODEL};

    # Pass on or delete
    &touch ("$self->{WORKDIR}/$drop/done");
    $self->relayDrop ($drop);
    &logmsg("stats: $drop @{[&formatElapsedTime($self->{STARTTIME})]} success");
}
