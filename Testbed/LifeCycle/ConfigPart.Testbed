### ENVIRON common
. $TESTBED_ROOT/env.sh;
PHEDEX_BASE=${PHEDEX_ROOT};
PHEDEX_INSTANCE=DEVDB10;

[ -z "$PHEDEX_SITE" ] && { echo '$PHEDEX_SITE not set' 1>&2; exit 1; };
[ -z "$PHEDEX_INSTANCE" ] && { echo '$PHEDEX_INSTANCE not set' 1>&2; exit 1; };
[ -z "$PHEDEX_CONTEXT" ] && { echo '$PHEDEX_CONTEXT not set' 1>&2; exit 1; };

PHEDEX_CONFIG=${PHEDEX_BASE}/Testbed/LifeCycle; export PHEDEX_CONFIG
PHEDEX_STATE=${PHEDEX_BASE}/${PHEDEX_INSTANCE}_${PHEDEX_CONTEXT}/state;
PHEDEX_LOGS=${PHEDEX_BASE}/${PHEDEX_INSTANCE}_${PHEDEX_CONTEXT}/logs;
PHEDEX_SCRIPTS=${PHEDEX_BASE};
#PHEDEX_MAP=${PHEDEX_CONFIG}/tfc.xml;
PHEDEX_MSS=`echo ${PHEDEX_NODE}_MSS |sed 's|_Buffer||' |sed 's|_Export||'`;

# prepare authentication env variables
unset X509_USER_KEY X509_USER_CERT;
unset X509_USER_PROXY;

# Set this appropriately!
TNS_ADMIN=${PHEDEX_ROOT}/Schema;

# Debug on
PHEDEX_DEBUG=1; export PHEDEX_DEBUG;
PHEDEX_VERBOSE=1; export PHEDEX_VERBOSE;

# Purely for debugging purposes, use it only if you know what you are doing...
PHEDEX_DEBUGGER="rlwrap perl -MPHEDEX::Debug -d"; export PHEDEX_DEBUGGER
