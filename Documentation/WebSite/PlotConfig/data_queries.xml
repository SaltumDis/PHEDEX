<phedex>

  <import module="phedex.database.queries">SqlQueries</import>
  <import module="time"/> 
 
  <class type="SqlQueries" name="GenericBase">

    <attribute name="connection_manager"> PhedexConnMan </attribute>

    <attribute name="display_name"> Phedex Queries  </attribute>

    <query name="very_generic_link">
      <inputs>
        <input name="to_node" />
        <input name="from_node" />
      </inputs>
      <sql>
        select
          <slot name="columns" />
        from
          <slot name="from" />
        where
          <slot name="where" />
      </sql>
      <results module="phedex.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivot_transform"> phedex_link </input>
        </inputs>
      </results>
      <attribute name="graph_type" />
      <attribute name="pivot_name">Pivot</attribute>
      <attribute name="grouping_name" />
      <attribute name="title" />
      <attribute name="column_names" />
      <attribute name="column_units" />
    </query>
    <query name="very_generic_node">
      <inputs>
        <input name="node" />
      </inputs>
      <sql>
        select
          <slot name="columns"/>
        from
          <slot name="from"/>
        where
          <slot name="where"/>
      </sql>
      <results module="phedex.database.query_handler" function="results_parser">
        <inputs>
          <input name="results"> 2 </input>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
        </inputs>
      </results>
      <attribute name="graph_type" />
      <attribute name="pivot_name">Pivot</attribute>
      <attribute name="grouping_name" />
      <attribute name="title" />
      <attribute name="column_names" />
      <attribute name="column_units" />
    </query>
  </class>

  <class type="SqlQueries" name="DataQueries">

    <attribute name="connection_manager"> PhedexConnMan </attribute>

    <attribute name="display_name"> Phedex Queries  </attribute>

    <query name="subscription" base="GenericBase.very_generic_node">
      <sql>
        <!-- select -->
        <filler name="columns">
          n.name, d.name, sum(b.bytes)/1099511627776
        </filler>
        <!-- from -->
        <filler name="from"> t_dps_block b
          join t_dps_dataset d on d.id = b.dataset
          join t_dps_subscription s on s.dataset = d.id
          join t_adm_node n on n.id = s.destination
        </filler>
        <!-- where -->
        <filler name="where">
            regexp_like( n.name, :node )
          group by n.name, d.name
          order by n.name, d.name
        </filler>
      </sql>
      <results module="phedex.database.query_handler" function="results_parser">
      </results>
      <attribute name="pivot_name"> Destination </attribute>
      <attribute name="grouping_name">Name</attribute>  
      <attribute name="title"> Subscriptions Active </attribute>
      <attribute name="column_names"> Dataset Size </attribute>
      <attribute name="column_units"> TB </attribute>
    </query>

<!--
    <query name="routing_query">
      <inputs>
        <input name="to_node" />
        <input name="from_node">T</input>
      </inputs>
      <sql>
        select
          f.name, t.name, b.name, sum(fi.filesize)/1099511627776
          from t_xfer_state xs
          join t_adm_node t on t.id = xs.to_node
          join t_adm_node f on f.id = xs.from_node
          join t_dps_file fi on fi.id = xs.fileid
          join t_dps_block b on b.id = fi.inblock
          where
            regexp_like( t.name, :to_node ) and
            regexp_like( f.name, :from_node )
          group by b.name, f.name, t.name
          order by t.name, b.name
      </sql>
      <results module="phedex.database.query_handler" function="results_parser">
        <inputs all="True">
          <input name="pivot_transform"> phedex_link </input>
        </inputs>
      </results>
      <attribute name="graph_type" />
      <attribute name="pivot_name">Link</attribute>
      <attribute name="grouping_name">Block</attribute>
      <attribute name="title">Routing Information</attribute>
      <attribute name="column_names">Block Size</attribute>
      <attribute name="column_units">TB</attribute>
    </query>
-->

    <query name="rates_query">
      <inputs>
        <input name="to_node" />
        <input name="from_node">T</input>
        <input name="span" type="eval">3600</input>
        <input name="now" type="eval">time.time()</input>
      </inputs>
      <sql>
      select
        f.name, t.name,
        null,
        nvl(sum(h.done_files),0),
        nvl(sum(h.done_bytes),0)/1073741824,
        nvl(sum(h.done_bytes),0)/1048576/:span,
        nvl(sum(h.fail_files),0)
      froma t_history_link_events h
        join t_adm_node f on f.id = h.from_node
        join t_adm_node t on t.id = h.to_node
      where 
        timebin >= :now - :span and
        regexp_like( t.name, :to_node ) and
        regexp_like( f.name, :from_node )
      group by f.name, t.name
      order by 5 desc
      </sql>
      <results module="phedex.database.query_handler" function="results_parser">
        <inputs all="True">
          <input name="results"> 3,4,5,6 </input>
          <input name="pivot_transform"> phedex_link </input>
        </inputs>
      </results>
      <attribute name="graph_type" />
      <attribute name="pivot_name">Link</attribute>
      <attribute name="grouping_name" />
      <attribute name="title">Rates Information</attribute>
      <attribute name="column_names">Done Files, Data Transferred, Data Transfer Rate, Files Failed</attribute>
      <attribute name="column_units">files,GB,MB/s,files</attribute>
    </query>

<!--
    <query name="file_info">
      <inputs>
        <input name="lfn" > /store/CSA06-skim/2006/10/25/CSA06_Exotics_SkimI/00643AC5-0866-DB11-814A-001731AF6877.root </input>
      </inputs>
      <sql>
        select
          f.logical_name,
          null,
          b.name,
          d.name,
          f.checksum,
          f.filesize/1048576
        from t_dps_file f
          join t_dps_block b on f.inblock = b.id
          join t_dps_dataset d on b.dataset = d.id
        where
          regexp_like( f.logical_name, :lfn )
      </sql>
      <results module="phedex.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2,3,4,5 </input>
        </inputs>
      </results>
      <attribute name="graph_type"/>
      <attribute name="pivot_name">LFN</attribute>
      <attribute name="grouping_name" />
      <attribute name="title">File Information</attribute>
      <attribute name="column_names">Block Name, Dataset Name, File Checksum, File Size</attribute>
      <attribute name="column_units">,,,,MB</attribute>
    </query>
-->

  </class>

</phedex>
