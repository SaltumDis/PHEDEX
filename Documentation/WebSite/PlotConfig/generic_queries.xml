<phedex>

  <import module="phedex.database.queries">SqlQueries</import>
  <import module="time"/> 
  <import file="$GRAPH_ROOT/config2.5/DBParam.xml" />

  <class type="SqlQueries" name="GenericQuery">

    <attribute name="connection_manager"> PhedexConnMan </attribute>

    <attribute name="display_name"> Phedex Queries  </attribute>

    <query name="link_query">
      <inputs>
        <input name="to_node"> .* </input>
        <input name="span" type="eval"> 3600 </input>
        <input name="from_node" > .* </input>
        <input name="starttime" type="eval">time.time()-3*86400</input>
        <input name="endtime" type="eval">time.time()</input>
      </inputs>
      <sql> 
        select
          f.name, t.name,
          trunc( h.timebin/:span)*:span,
          <slot name="column"/>
        from t_history_link_events h
          join t_adm_node f on f.id = h.from_node
          join t_adm_node t on t.id = h.to_node
        where timebin &gt;= :starttime
          and timebin &lt; :endtime and
          regexp_like( t.name, :to_node ) and
          regexp_like( f.name, :from_node )
        group by trunc(h.timebin/:span)*:span,
          f.name, t.name order by 1 asc, 2, 3
      </sql>
      <results module="phedex.database.query_handler" function="results_parser">
        <inputs all="True">
          <input name="pivot_transform">phedex_link</input>
          <input name="pivots"> 0,1 </input>
          <input name="grouping"> 2 </input>
          <input name="results"> 3 </input>
        </inputs>
      </results>
      <attribute name="graph_type">phedex_link_bar_generic</attribute>
      <attribute name="pivot_name">Link</attribute>
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title" />
      <attribute name="column_names"/>
      <attribute name="column_units" />
    </query>

    <query name="link_stats_query">
      <inputs>
        <input name="to_node"> .* </input>
        <input name="span" type="eval"> 3600 </input>
        <input name="from_node" > .* </input>
        <input name="starttime" type="eval">time.time()-3*86400</input>
        <input name="endtime" type="eval">time.time()</input>
      </inputs>
      <sql>
        select
          f.name, t.name,
          trunc( h.timebin/:span)*:span,
          <slot name="column"/>
        from t_history_link_stats h
          join t_adm_node f on f.id = h.from_node
          join t_adm_node t on t.id = h.to_node
        where timebin &gt;= :starttime
          and timebin &lt; :endtime and
          regexp_like( t.name, :to_node ) and
          regexp_like( f.name, :from_node )
        group by trunc(h.timebin/:span)*:span,
          f.name, t.name order by 1 asc, 2, 3
      </sql>
      <results module="phedex.database.query_handler" function="results_parser">
        <inputs all="True">
          <input name="pivot_transform">phedex_link</input>
          <input name="pivots"> 0,1 </input>
          <input name="grouping"> 2 </input>
          <input name="results"> 3 </input>
        </inputs>
      </results>
      <attribute name="graph_type">phedex_link_bar_generic</attribute>
      <attribute name="pivot_name">Link</attribute>
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title" />
      <attribute name="column_names"/>
      <attribute name="column_units" />
    </query>

    <query name="dest_query">
      <inputs>
        <input name="node" > .* </input>
        <input name="span" type="eval"> 3600 </input>
        <input name="starttime" type="eval">time.time()-86400</input>
        <input name="endtime" type="eval">time.time()</input>
      </inputs>
      <sql>
        select
          t.name,
          trunc( h.timebin/:span)*:span,
          <slot name="column"/>
        from t_history_dest h
          join t_adm_node t on t.id = h.node
        where timebin &gt;= :starttime
          and timebin &lt; :endtime and
          regexp_like( t.name, :node )
        group by trunc(h.timebin/:span)*:span,
          t.name order by 1 asc, 2
      </sql>
      <results module="phedex.database.query_handler" function="results_parser">
        <inputs all="True">
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2 </input>
        </inputs>
      </results>
      <attribute name="graph_type">phedex_dest_bar_generic</attribute>
      <attribute name="pivot_name">Node</attribute>
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title" />
      <attribute name="column_names" />
      <attribute name="column_units" />
    </query>

  </class>

</phedex>


