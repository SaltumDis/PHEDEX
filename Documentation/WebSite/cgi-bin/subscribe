#!/usr/bin/env perl

use strict;
use warnings;
use CGI qw(:standard);
use CGI::Carp qw(fatalsToBrowser);
use POSIX;
use DBI;

my %databases = ("prod" => [ "cms", 'CMS_TRANSFERMGMT', 'smallAND_round' ],
		 "test" => [ "devdb", 'CMS_TRANSFERMGMT', 'smallAND_round' ],
		 "testbed" => [ "devdb", 'CMS_TRANSFERMGMT_TESTBED', 'phedexedehp' ]);
my $cgi = new CGI;
my $db = param("db") || "prod";
my $dbh;

my $badcolor = '#ff9e9e';
my $warncolor = '#ffd89e';
my $pendcolor = '#ccccff'; # ececff
my $goodcolor = '#ccffcc';
my $altcolor = '#e8e8e8';

$ENV{TNS_ADMIN} = "/afs/cern.ch/project/oracle/admin";
$ENV{ORACLE_HOME} = "/afs/cern.ch/project/oracle/\@sys/10103";
$ENV{LD_LIBRARY_PATH} = "/afs/cern.ch/project/oracle/\@sys/10103/lib";
$db = "prod" if ! grep ($db eq $_, keys %databases);
my ($dbname, $dbuser, $dbpass) = @{$databases{$db}};
$dbh = DBI->connect ("DBI:Oracle:$dbname", $dbuser, $dbpass,
	    	     { RaiseError=>1, AutoCommit =>1 });

my $owner = $cgi->param('owner');
my $dataset = $cgi->param('dataset');
my %nodesel = map { $_ => 1 } $cgi->param('sites');
my $nodesql = q{select name from t_node order by name};
my @nodes = @{$dbh->selectcol_arrayref($nodesql)};

if ($cgi->param ('submit'))
{
    if ($owner && $dataset)
    {
	my $stmt = $dbh->prepare(qq{
	    select count(*) from t_subscription
	    where destination = ? and owner = ? and dataset = ?});
        my $istmt = $dbh->prepare(qq{
	    insert into t_subscription
	    (destination, owner, dataset)
	    values (?, ?, ?)});
        foreach my $dest (keys %nodesel)
	{
	    $stmt->execute ($dest, $owner, $dataset);
	    my ($known) = $stmt->fetchrow();
	    $istmt->execute ($dest, $owner, $dataset) if ! $known;
	}
    }
    %nodesel = ();
}

if ($owner && $dataset)
{
    my $stmt = $dbh->prepare (qq{
	select destination
	from t_subscription
	where owner = ? and dataset = ?});
    $stmt->execute ($owner, $dataset);
    while (my ($node) = $stmt->fetchrow()) {
	$nodesel{$node} = 1;
    }
}

print $cgi->header(),
    "<html>\n",
    "<title>PhEDEx Data Subscription</title>\n",
    "<body bgcolor='#FFFFFF'>\n",
    "<center><h1>PhEDEx Data Subscription</h1>\n",
    start_form(),
    "<table><tr>",
    "<td>Database</td>",
    "<td><select name='db'>",
    "<option value='testbed'@{[$db eq 'testbed' && ' selected=selected']}>Testbed</option>",
    "<option value='test'@{[$db eq 'test' && ' selected=selected']}>Test</option>",
    "<option value='prod'@{[$db eq 'prod' && ' selected=selected']}>Production</option>",
    "</select></td>\n",
    "</tr><tr>\n",
    "<td>Owner</td>",
    "<td><input type='text' name='owner' size='20' value='$owner'></td>",
    "</tr><tr>\n",
    "<td>Dataset</td>",
    "<td><input type='text' name='dataset' size='20' value='$dataset'></td>",
    "</tr>\n",
    (map { "<tr><td>$_</td>"
	   ."<td><input type='checkbox' name='sites' value='$_'"
	   .($nodesel{$_} ? ' checked' : '')
	   ."></td></tr>\n" } @nodes),
    "<tr><td><input type='submit' name='submit' value='Submit'></td><td></td></tr>\n",
    "</table>\n",
    end_form(),
    "</body>\n",
    "</html>\n";

$dbh->disconnect();
