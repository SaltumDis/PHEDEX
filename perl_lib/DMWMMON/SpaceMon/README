Class Record (container):
 - holds aggregated node space usage info 

Class StorageDump(base class container):
 - machine representation of storage dump info

Class Format::XML(algorithm):
 - rules for parsing dump in XML format

Class Foramt::TXT(algorithm):
 - rules for parsing dump in TXT format

Class RecordIO (algorithm): 
 - reads/writes Record from/to file 
 - closure test : write record to a file, read it back and compare. 

Class Aggregate (algorithm): 
 - converts StorageDump object into Record object

## This is an optional class if in future we want multiple scenarios to be handled in one script:
#Class SpaceMon (module):
## For now this is done in the main executable:
spacemon
 - read storage dump, creates Record, and uploads to cerntral DB/local file. 

Core (module):
 - provides package version info 
 - common options???



##########

Debug and Verbose guidelines:

- with noverbose and nodebug options no output should be produced, except for errors/warnings
- verbose ON should print out workflow info to give an idea of what it is doing, especially for operations that may require long time, intended for users running in interactive mode
- debug ON should dump the objects information and anything else useful for development.


All object related output must come from the class methods.

Unrecognized options should be reported: 
 - GetOpts is called multiple times to filter out various API specific options
 - we may need to run it again at the end re-configured for strict output
